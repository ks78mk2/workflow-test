name: Squash and Merge

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - synchronize

jobs:
  squash-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name ks78mk2
          git config --global user.email ks78mk2@naver.com

      - name: Fetch all branches
        run: git fetch origin

      - name: Check if branch starts with 'feature/'
        id: check_branch
        run: |
          if [[ "${{ github.head_ref }}" == feature/* ]]; then
            echo "::set-output name=branch_is_feature::true"
          else
            echo "::set-output name=branch_is_feature::false"
          fi

      - name: Backup Feature Branch
        if: steps.check_branch.outputs.branch_is_feature == 'true'
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/\//-/g')-backup
          git branch $BRANCH_NAME

      - name: Reset Patch Push
        if: steps.check_branch.outputs.branch_is_feature == 'true'
        run: |
          INITIAL_COMMIT_HASH=$(git merge-base --fork-point origin/patch)
          echo $INITIAL_COMMIT_HASH
          git checkout $INITIAL_COMMIT_HASH
          git push --force ${{ github.head_ref }}
          echo "Pushed to ${{ github.head_ref }}"

      - name: Squash Merge
        if: steps.check_branch.outputs.branch_is_feature == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/\//-/g')-backup
          git merge --squash $BRANCH_NAME
          git commit -m ${{ github.event.pull_request.title }}
          git push --force origin HEAD:${{ github.head_ref }}
